package com.tistory.jaimemin.springboottestdemo.spring.mock;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

import com.tistory.jaimemin.springboottestdemo.spring.post.domain.Post;
import com.tistory.jaimemin.springboottestdemo.spring.post.service.port.PostRepository;

public class FakePostRepository implements PostRepository {

	private final AtomicLong autoGeneratedId = new AtomicLong(0);

	private final List<Post> posts = Collections.synchronizedList(new ArrayList<>());

	@Override
	public Optional<Post> findById(long id) {
		return posts.stream().filter(item -> item.getId().equals(id)).findAny();
	}

	@Override
	public Post save(Post post) {
		if (post.getId() == null || post.getId() == 0) {
			Post newPost = Post.builder()
				.id(autoGeneratedId.incrementAndGet())
				.content(post.getContent())
				.createdAt(post.getCreatedAt())
				.modifiedAt(post.getModifiedAt())
				.writer(post.getWriter())
				.build();
			posts.add(newPost);

			return newPost;
		}

		posts.removeIf(item -> Objects.equals(item.getId(), post.getId()));
		posts.add(post);

		return post;
	}
}
